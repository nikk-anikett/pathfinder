const express = require('express');
const dgram = require('dgram');
const app = express();
const server = dgram.createSocket('udp4');

app.set('view engine', 'ejs');
app.use(express.static('public'));

let receivedDataDatabase1 = [];
let receivedDataDatabase2 = [];

server.on('message', (msg, rinfo) => {
  const jsonData = JSON.parse(msg.toString('utf8'));
  const targetDatabase = jsonData.database;

  if (targetDatabase === 'database1') {
    receivedDataDatabase1.push(jsonData);
  } else if (targetDatabase === 'database2') {
    receivedDataDatabase2.push(jsonData);
  }
});

server.on('listening', () => {
  const address = server.address();
  console.log(`UDP server listening on ${address.address}:${address.port}`);
});

const PORT = 15000;
server.bind(PORT);

app.get('/database1', (req, res) => {
  res.render('index', { data: receivedDataDatabase1, databaseName: 'Database 1' });
});

app.get('/database2', (req, res) => {
  res.render('index', { data: receivedDataDatabase2, databaseName: 'Database 2' });
});

app.listen(3000, () => {
  console.log('Web server listening on port 3000');
});

using System;
using System.Collections.Generic;
using System.Text;
using System.Windows.Forms;
using System.Net.Sockets;
using Newtonsoft.Json;

namespace WindowsFormsApp
{
    public partial class Form1 : Form
    {
        private List<User> database1 = new List<User>();
        private List<User> database2 = new List<User>();

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            // Initialize databases with data
            database1.Add(new User { FirstName = "John", LastName = "Doe", Email = "john.doe@example.com", Database = "database1" });
            database1.Add(new User { FirstName = "Jane", LastName = "Smith", Email = "jane.smith@example.com", Database = "database1" });

            database2.Add(new User { FirstName = "Alice", LastName = "Johnson", Email = "alice.johnson@example.com", Database = "database2" });
            database2.Add(new User { FirstName = "Bob", LastName = "Brown", Email = "bob.brown@example.com", Database = "database2" });
        }

        private void buttonSendDatabase1_Click(object sender, EventArgs e)
        {
            SendData(database1);
        }

        private void buttonSendDatabase2_Click(object sender, EventArgs e)
        {
            SendData(database2);
        }

        private void SendData(List<User> selectedDatabase)
        {
            try
            {
                string udpHost = "127.0.0.1";
                int udpPort = 15000;
                UdpClient udpClient = new UdpClient();

                foreach (var user in selectedDatabase)
                {
                    string jsonData = JsonConvert.SerializeObject(user);
                    byte[] sendBytes = Encoding.UTF8.GetBytes(jsonData);
                    udpClient.Send(sendBytes, sendBytes.Length, udpHost, udpPort);
                }

                udpClient.Close();

                MessageBox.Show("Data sent successfully!");
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error sending data: " + ex.Message);
            }
        }
    }

    public class User
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string Database { get; set; }
    }
}

<!DOCTYPE html>
<html>
<head>
  <title><%= databaseName %></title>
</head>
<body>
  <h1><%= databaseName %></h1>
  <button onclick="fetchData('database1')">Fetch Data from Database 1</button>
  <button onclick="fetchData('database2')">Fetch Data from Database 2</button>
  
  <table>
    <thead>
      <tr>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email</th>
      </tr>
    </thead>
    <tbody id="data">
      <!-- Data will be displayed here dynamically -->
    </tbody>
  </table>

  <script>
    function fetchData(database) {
      fetch(`/${database}`)
        .then(response => response.json())
        .then(data => {
          const dataContainer = document.getElementById('data');
          dataContainer.innerHTML = ''; // Clear previous data

          data.forEach(user => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${user.FirstName}</td>
              <td>${user.LastName}</td>
              <td>${user.Email}</td>
            `;
            dataContainer.appendChild(row);
          });
        })
        .catch(error => console.error('Error fetching data:', error));
    }
  </script>
</body>
</html>




<!DOCTYPE html>
<html>
<head>
  <title>Fetch Data</title>
</head>
<body>
  <h1>Data Viewer</h1>
  <button onclick="fetchData('database1')">Fetch Data from Database 1</button>
  <button onclick="fetchData('database2')">Fetch Data from Database 2</button>
  
  <table>
    <thead>
      <tr>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email</th>
      </tr>
    </thead>
    <tbody id="data">
      <!-- Data will be displayed here dynamically -->
    </tbody>
  </table>

  <script>
    function fetchData(database) {
      const dataContainer = document.getElementById('data');
      dataContainer.innerHTML = ''; // Clear previous data

      fetch(`/${database}`)
        .then(response => response.json())
        .then(data => {
          data.forEach(user => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td>${user.FirstName}</td>
              <td>${user.LastName}</td>
              <td>${user.Email}</td>
            `;
            dataContainer.appendChild(row);
          });
        })
        .catch(error => console.error('Error fetching data:', error));
    }
  </script>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Play/Stop Music</title>
</head>
<body>
    <h1>Play/Stop Music Example</h1>
    <audio id="audio" src="/CLICK.mp3" preload="auto" loop></audio>
    <label for="playCheckbox">Play Music:</label>
    <input type="checkbox" id="playCheckbox">
    <br>
    <label for="stopCheckbox">Stop Music:</label>
    <input type="checkbox" id="stopCheckbox">
    
    <script>
        var audioElement = document.getElementById("audio");
        var playCheckbox = document.getElementById("playCheckbox");
        var stopCheckbox = document.getElementById("stopCheckbox");
        
        // Load checkbox state from localStorage
        var playChecked = localStorage.getItem('playChecked') === 'true';
        playCheckbox.checked = playChecked;

        function updatePlayStatus() {
            var x = 2; // Set x to 2 (even)
            
            if (playCheckbox.checked && !stopCheckbox.checked) {
                if (x % 2 === 0) {
                    audioElement.play();
                } else {
                    audioElement.pause();
                }
            } else {
                audioElement.pause();
            }
            
            setTimeout(updatePlayStatus, 2000); // Update every 2 seconds
        }

        updatePlayStatus(); // Start the update function on page load

        // Save checkbox state to localStorage when the checkbox changes
        playCheckbox.addEventListener("change", function() {
            localStorage.setItem('playChecked', playCheckbox.checked);
        });
        stopCheckbox.addEventListener("change", function() {
            localStorage.setItem('stopChecked', stopCheckbox.checked);
        });
    </script>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
    <title>Play/Stop Music</title>
</head>
<body>
    <h1>Play/Stop Music Example</h1>
    <audio id="audio" src="/CLICK.mp3" preload="auto" loop></audio>
    <label for="playCheckbox">Play Music:</label>
    <input type="checkbox" id="playCheckbox">
    <br>
    <label for="stopCheckbox">Stop Music:</label>
    <input type="checkbox" id="stopCheckbox">
    
    <script>
        var audioElement = document.getElementById("audio");
        var playCheckbox = document.getElementById("playCheckbox");
        var stopCheckbox = document.getElementById("stopCheckbox");
        
        // Load checkbox states from localStorage
        var playChecked = localStorage.getItem('playChecked') === 'true';
        var stopChecked = localStorage.getItem('stopChecked') === 'true';
        playCheckbox.checked = playChecked;
        stopCheckbox.checked = stopChecked;

        function updatePlayStatus() {
            var x = 2; // Set x to 2 (even)
            
            if (playCheckbox.checked && !stopCheckbox.checked) {
                if (x % 2 === 0) {
                    audioElement.play();
                } else {
                    audioElement.pause();
                }
            } else {
                audioElement.pause();
            }
            
            setTimeout(updatePlayStatus, 2000); // Update every 2 seconds
        }

        updatePlayStatus(); // Start the update function on page load

        // Event listeners for the checkboxes
        playCheckbox.addEventListener("change", function() {
            localStorage.setItem('playChecked', playCheckbox.checked);
            
            if (playCheckbox.checked) {
                stopCheckbox.checked = false;
            }
        });
        
        stopCheckbox.addEventListener("change", function() {
            localStorage.setItem('stopChecked', stopCheckbox.checked);
            
            if (stopCheckbox.checked) {
                playCheckbox.checked = false;
            }
        });
    </script>
</body>
</html>



