// Variables to track row visibility and data fetching
const visibilityState = {};
let rowsShrunk = false;
let currentDatabase = 'database1'; // Initial database

// Function to fetch data from server
function fetchData(database) {
    const xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {
        if (xhr.readyState === 4 && xhr.status === 200) {
            const data = JSON.parse(xhr.responseText);
            updateTable(data);
        }
    };
    xhr.open('GET', `/${database}`, true);
    xhr.send();
}

// Function to update row visibility
function updateRowVisibility(groupCode) {
    const rowsToToggle = document.querySelectorAll(`tr[data-groupcode="${groupCode}"]:not(.group-visible)`);

    rowsToToggle.forEach((toggleRow) => {
        toggleRow.style.display = visibilityState[groupCode] ? 'table-row' : 'none';
    });
}

// Function to shrink rows with Expirydate > 0
function shrinkRows() {
    const rows = document.querySelectorAll('tr[data-groupcode]');
    rows.forEach((row) => {
        const expiryDate = row.querySelector('td:nth-child(4)').textContent;
        if (expiryDate !== '0') {
            row.style.display = 'none';
        }
    });
    rowsShrunk = true; // Set rowsShrunk to true
}

// Function to show all rows
function showAllRows() {
    const rows = document.querySelectorAll('tr[data-groupcode]');
    rows.forEach((row) => {
        row.style.display = 'table-row';
    });
    rowsShrunk = false; // Set rowsShrunk to false
}

// Function to update the table with fetched data
function updateTable(data) {
    const tableBody = document.getElementById('data');
    let tableHTML = '';

    data.forEach((row) => {
        tableHTML += `<tr class="${row.Expirydate === '0' ? 'group-visible' : 'group-hidden'}" data-groupcode="${row.Groupcode}">
                        <td class="name">${row.FirstName}</td>
                        <td>${row.Symbol}</td>
                        <td>${row.Groupcode}</td>
                        <td>${row.Expirydate}</td>
                        <td>${row.Age}</td>
                        <td>${row.Now}</td>
                    </tr>`;
    });

    tableBody.innerHTML = tableHTML;

    const rows = document.querySelectorAll('tr[data-groupcode]');
    rows.forEach((row) => {
        const groupCode = row.getAttribute('data-groupcode');

        if (!(groupCode in visibilityState)) {
            visibilityState[groupCode] = false;
        }

        row.addEventListener('click', () => {
            visibilityState[groupCode] = !visibilityState[groupCode];
            updateRowVisibility(groupCode);
        });

        updateRowVisibility(groupCode);
    });
}
function toggleShowAllRows() {
    if (rowsShrunk) {
        showAllRows();
    } else {
        shrinkRows();
    }
}

// const expandButton = document.getElementById('expandButton');
// expandButton.addEventListener('click', toggleShowAllRows);

// Event listener for key press (e.g., "E" key)
document.addEventListener('keypress', (event) => {
    if (event.key === 'e' || event.key === 'E') {
        toggleShowAllRows();
    }
});

// Initial fetch of data
fetchData(currentDatabase);
setInterval(() => {
    fetchData(currentDatabase);
    updatePlayStatus();
}, 2000);

// Event listeners for buttons
const shrinkButton = document.getElementById('shrinkButton');
shrinkButton.addEventListener('click', () => {
    shrinkRows();
});

const expandButton = document.getElementById('expandButton');
expandButton.addEventListener('click', () => {
    showAllRows();
});

const showTableButton = document.getElementById("showTableButton");
showTableButton.addEventListener("click", function() {
    dataTable.style.display = "table"; // Show the table
    fetchData(currentDatabase); // Fetch data and update the table
});
