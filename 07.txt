const express = require('express');
const fs = require('fs');
const csv = require('csv-parser');
const path = require('path');
const app = express();

app.get('/', (req, res) => {
    res.send("backend connected");
})



const csvFolder = './CSV'; // Path to your CSV folder

const readCSVFiles = async () => {
  try {
    const files = await fs.promises.readdir(csvFolder);

    const data = [];

    for (const file of files) {
      if (file.endsWith('.csv')) {
        const filePath = path.join(csvFolder, file);
        const fileData = await readCSV(filePath);
        data.push({ data: fileData });
      }
    }

   

    
    // let result_task = new Array();
    // let result_subtask = ((data[0].data));
    // result_subtask = (result_subtask);
    let result_task = (data[0].data);
    
    console.log(result_task);
    return result_task;
  } catch (error) {
    console.error('Error reading CSV files:', error);
  }
};

const readCSV = async (filePath) => {
  const rows = [];

  return new Promise((resolve, reject) => {
    fs.createReadStream(filePath)
      .pipe(csv())
      .on('data', (row) => {
        rows.push(row);
      })
      .on('end', () => {
        resolve(rows);
      })
      .on('error', (error) => {
        reject(error);
      });
  });
};

readCSVFiles();



app.listen(3000, () => {
    console.log(`server is running on port ${3000}`);
})




import React, { useState } from 'react';
import './App.css';

function App() {
  // Sample data for an employee and their tasks
  const employeeData = {
    name: 'John Doe',
    tasks: [
      { id: 1, title: 'Task 1', details: 'Details of Task 1' },
      { id: 2, title: 'Task 2', details: 'Details of Task 2' },
      { id: 3, title: 'Task 3', details: 'Details of Task 3' }
    ]
  };
  const employeeData2 = {
    name: 'John Doe',
    tasks: [
      { id: 1, title: 'c', details: 'Details of Task 1' },
      { id: 1, title: 'c', details: 'Details of Task 12' },
      { id: 1, title: 'c', details: 'Details of Task 13' },
      { id: 1, title: 'o', details: 'Details of Task 14' },
      { id: 1, title: 'o', details: 'Details of Task 15' },
      { id: 2, title: 'c', details: 'Details of Task 2' },
      { id: 2, title: 'c', details: 'Details of Task 22' },
      { id: 2, title: 'ns', details: 'Details of Task 23' },
      { id: 2, title: 'ns', details: 'Details of Task 24' },
      { id: 3, title: 'c', details: 'Details of Task 31' }
    ]
  };

  const [selectedTask, setSelectedTask] = useState(null);

  const handleTaskHover = (taskId) => {
    
      const tasks = employeeData2.tasks.filter(task => task.id === taskId);
      setSelectedTask(tasks);
   
  };

  return (
    <div className="container">
      <div className="column">
        <div className="single-box">{employeeData.name}</div>
      </div>
      <div className="column">
        {employeeData.tasks.map((task) => (
          <div
            key={task.id}
            className="box-container"
            onMouseEnter={() => handleTaskHover(task.id)}
            onMouseLeave={() => setSelectedTask(null)}
          >
            <div className="box">{task.title}</div><br/><br/>
          </div>
        ))}
      </div>
      <div className="column">
        {selectedTask && (
          <div className="task-details">
            {selectedTask.map(task => (
              <div key={task.id}>
                <h3>{task.title}</h3>
                <p>{task.details}</p>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
}

export default App;



// import React, { useEffect, useState } from "react";
// import "./App.css";
// import axios from "axios";

// let baseUrl = "http://localhost:8080";

// function App() {
//   const [task, setTask] = useState([]);
//   const [subtask, setSubtask] = useState([]);
//   const [selectedTask, setSelectedTask] = useState(null);

//   function getFunctionTask() {
//     axios
//       .get(`${baseUrl}/database2`)
//       .then((response) => {
//         console.log(response.data);
//         setTask(...response.data);
//       })
//       .catch((err) => console.log("found error"));
//   }

//   function getFunctionSubtask() {
//     axios
//       .get(`${baseUrl}/database1`)
//       .then((response) => {
//         setSubtask(...response.data);
//       })
//       .catch((err) => console.log("found error"));
//   }

//   useEffect(() => {
//     getFunctionTask();
//     getFunctionSubtask();
//   }, []);

//   const handleTaskHover = (taskId) => {
//     const tasks = subtask.data?.filter((task) => task.ID === taskId);
//     setSelectedTask(tasks);
//   };

//   return (
//     <div className="body" onMouseLeave={() => setSelectedTask(null)}>
//       <div className="container">
//         <div className="column_one">
//           <div className="single-box"> {task.name}</div>
//         </div>
//         <div className="column_two">
//           <div className="column_two_one">
//             {task.data?.map((ele) => (
//               <div
//                 key={ele.ID}
//                 className="box-container"
//                 onMouseEnter={() => handleTaskHover(ele.ID)}
//               >
//                 <div className="box">{ele["Current Tasks"]}</div>
//               </div>
//             ))}
//           </div>

//           <div className="column_two_two">
//             {selectedTask && (
//               <div className="task-details">
//                 {selectedTask.map((ele) => (
//                   <div key={ele.id}>
//                     <p className="paragraph">
//                       <li >{ele.Work}</li>
//                     </p>
//                   </div>
//                 ))}
//               </div>
//             )}
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// }

// export default App;







